@startuml

title Checkout Class Diagram

class "Sprint Boot Framework" as SBF
SBF *-- ShoppingCartController
SBF *-- CustomerController
SBF *-- CheckOutController
ShoppingCartController *-- ShoppingCart

class ShoppingCartController {
getShoppingCart() : ShoppingCart
}

ShoppingCart ..> DataStore
class DataStore {
getCachedCartItems(User user) : ShoppingCart
}

class ShoppingCart {
}

class CustomerController {
__
getCurrentCustomer() : Customer
createGuest() : Customer
}

class Customer {
__
getPaymentInfo() : PaymentInfo
getDeliveryInfo() : DeliveryInfo
getBillingInfo() : BillingInfo
}

Customer *-- BillingInfo

class UserService {
__
getRegisteredUser() User
}

User -up-|> Customer
CustomerController *-- UserService
CustomerController *-- Customer
UserService--> User

class CheckOutController {
__
checkout(ShoppingCart cartItems, Customer customerData) : void
}

class CheckOutModel {
__
checkout() : void
}
interface PaymentService {
completePayment() : void
}

class CheckOutView {
getSuccessfulCheckOutView() : Template
getFailureCheckOutView() : Template
}

StripePaymentService .up.|> PaymentService
PaypalPaymentService .up.|> PaymentService

CheckOutController *-- PaymentService
CheckOutController *-- CheckOutModel
CheckOutController *-- CheckOutView
CheckOutView ..> CheckOutModel
'ObserverPattern or Pub/Sub needed to be added...
'  if someone else buys last item, shopping cart should be updated...
'View may need to be updated
@enduml